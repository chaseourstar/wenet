name: Build Android APK & Binary

on:
  workflow_dispatch:
    inputs:
      modelURL:
        description: 'Model URL'
        required: true
        default: https://wenet-1256283475.cos.ap-shanghai.myqcloud.com/models/aishell/20210601_u2%2B%2B_conformer_libtorch.tar.gz

env:
  ANDROID_DIR: runtime/android
  RELEASE_DIR: app/build/outputs/apk/release
  FBJNI_VERSION: v0.6.0
  PYTORCH_VERSION: 1.9.0

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build wget unzip

    - name: Download and Set Up FBJNI
      run: |
        mkdir -p ${{ env.ANDROID_DIR }}/fbjni
        cd ${{ env.ANDROID_DIR }}/fbjni
        wget https://github.com/facebookincubator/fbjni/archive/refs/tags/v0.6.0.zip
        unzip v0.6.0.zip
        cd fbjni-${{ env.FBJNI_VERSION }}/
        ./build.sh

    - name: Download and Set Up PyTorch Android Library
      run: |
        mkdir -p ${{ env.ANDROID_DIR }}/pytorch
        cd ${{ env.ANDROID_DIR }}/pytorch
        wget https://dl.fbaipublicfiles.com/pytorch/android/${{ env.PYTORCH_VERSION }}/pytorch_android-${{ env.PYTORCH_VERSION }}.aar
        unzip pytorch_android-${{ env.PYTORCH_VERSION }}.aar -d jni

    - name: Prepare model
      run: |
        wget ${{ github.event.inputs.modelURL }}
        tar -xf *.tar.gz
        find . \( -name "final.zip" -o -name "units.txt" \) |\
          xargs -I  {} cp {} ${{ env.ANDROID_DIR }}/app/src/main/assets

    - name: Build with Gradle
      run: |
        cd ${{ env.ANDROID_DIR }}
        chmod +x gradlew
        ./gradlew assembleRelease -DFBJNI_LIBRARY=${{ env.ANDROID_DIR }}/fbjni/fbjni-${{ env.FBJNI_VERSION }}/build/lib -DPYTORCH_LIBRARY=${{ env.ANDROID_DIR }}/pytorch/jni

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: release-apk
        path: ${{ env.ANDROID_DIR }}/${{ env.RELEASE_DIR }}

    - name: Prepare Release Binary
      run: |
        cd ${{ env.ANDROID_DIR }}
        for arch in arm64-v8a x86_64; do
          mkdir $arch
          cp app/.cxx/cmake/release/$arch/decoder_main $arch
          cp `find . -name "pytorch_android-*.aar"`/jni/$arch/* $arch
        done

    - name: Upload arm64-v8a Binary
      uses: actions/upload-artifact@v3
      with:
        name: release-arm64-v8a-binary
        path: ${{ env.ANDROID_DIR }}/arm64-v8a

    - name: Upload x86_64 Binary
      uses: actions/upload-artifact@v3
      with:
        name: release-x86_64-binary
        path: ${{ env.ANDROID_DIR }}/x86_64
